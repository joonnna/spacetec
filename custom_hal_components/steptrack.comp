component steptrack "Steptrack algorithm";
pin in float in0;
pin in float in1;
pin out float out;
pin out float test; //testpin for storing prev val
pin out bit dir; //testpin for direction
param rw float prev;
param rw float prev_out;
param rw bit direction;
param rw float step_length = 1.0;
function _;
license "GPL"; // indicates GPL v2 or later
;;
if (in0 != -1.0)
{
    if (prev > in0)
    {
        if (direction)
        {
            out = in1 - step_length;
            direction = false;
        }
        else
        {
            out = in1 + step_length;
            direction = true;
        }
    }
    else
    {
        if (direction)
            out = in1 + step_length;
        else
            out = in1 - step_length;
    }
    prev = in0;
    test = prev;
    prev_out = out;
}
else
{
    out = prev_out;
}
dir = direction;
